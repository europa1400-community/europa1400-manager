name: Publish

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            cli_asset_name: europa1400-manager-windows.exe
            gui_asset_name: europa1400-manager-gui-windows.exe
            cli_executable_name: europa1400-manager.exe
            gui_executable_name: europa1400-manager-gui.exe
          - os: ubuntu-latest
            cli_asset_name: europa1400-manager-linux
            gui_asset_name: europa1400-manager-gui-linux
            cli_executable_name: europa1400-manager
            gui_executable_name: europa1400-manager-gui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: 3.13
          enable-cache: true
          cache-suffix: uv-${{ runner.os }}-3.13

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Build with PyInstaller
        run: |
          uv run pyinstaller pyinstaller.spec

      - name: Rename executables (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Move-Item -Path "dist\${{ matrix.cli_executable_name }}" -Destination "dist\${{ matrix.cli_asset_name }}"
          Move-Item -Path "dist\${{ matrix.gui_executable_name }}" -Destination "dist\${{ matrix.gui_asset_name }}"

      - name: Rename executables (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mv dist/${{ matrix.cli_executable_name }} dist/${{ matrix.cli_asset_name }}
          mv dist/${{ matrix.gui_executable_name }} dist/${{ matrix.gui_asset_name }}

      - name: Upload CLI Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.cli_asset_name }}
          asset_name: ${{ matrix.cli_asset_name }}
          asset_content_type: application/octet-stream

      - name: Upload GUI Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.gui_asset_name }}
          asset_name: ${{ matrix.gui_asset_name }}
          asset_content_type: application/octet-stream
